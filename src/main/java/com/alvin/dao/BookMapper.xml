<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    namespace="com.alvin.dao.BookMapper"  表示与 BookMapper接口相对应
-->
<mapper namespace="com.alvin.dao.BookMapper">

    <!--
        以addBook为例子:
            id = addBook 对应 BookMapper中的方法 addBook()
            parameterType="Books" : 表示输入参数类型为 Books
            resultType="Books"    : 表示返回参数类型为 Books 或者 List<Books>

            #{bookName} : 表示一个输入参数，注意这个参数名  要与  Books中的字段名一致

    -->
    <insert id="addBook" parameterType="Books">
        insert into ssmbuild.books(bookName, bookCounts, detail)
        values(#{bookName}, #{bookCounts}, #{detail});
    </insert>

    <delete id="deleteBookById" parameterType="int">
        delete from ssmbuild.books where bookID= #{bookID};
    </delete>

    <update id="updateBook" parameterType="Books">
        update ssmbuild.books
        set bookName = #{bookName}, bookCounts=#{bookCounts},detail=#{detail}
        where bookID = #{bookID};
    </update>

    <select id="queryBookById" resultType="Books">
        select * from ssmbuild.books
        where bookID=#{bookID};
    </select>

    <select id="queryAllBook" resultType="Books">
        select * from ssmbuild.books;
    </select>

    <select id="queryBookByName" resultType="Books">
        select * from ssmbuild.books
        where bookName = #{bookName}
    </select>
</mapper>

        <!--
         Mybatis 的配置文件
        -->